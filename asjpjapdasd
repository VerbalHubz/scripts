local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local HRP = character:WaitForChild("HumanoidRootPart")
local Camera = workspace.CurrentCamera
local Mouse = player:GetMouse()

local rigType = humanoid.RigType
local isR15 = rigType == Enum.HumanoidRigType.R15
local isR6 = rigType == Enum.HumanoidRigType.R6

local flying = false
local flySpeed = 50
local savedSpeed = 50
local supermanEnabled = false

local inputFlags = { forward = false, back = false, left = false, right = false, up = false, down = false }
local forwardHold = 0
local bodyVelocity, bodyGyro

local animations = {}
local tracks = {}

local originalGravity = Workspace.Gravity
local currentCF = nil
local currentRoll = 0
local maxRoll = 45
local lerpCoef = 0.1
local slideDamping = 0.05
local currentVelocity = Vector3.new(0, 0, 0)
local bobbingFrequency = 1
local bobbingAmplitude = 0.5
local flightConns = {}
local currentAnimTrack = nil

local moveState = { forward = 0, backward = 0, left = 0, right = 0 }

local function detectRig()
    character = player.Character or player.CharacterAdded:Wait()
    humanoid = character:WaitForChild("Humanoid")
    HRP = character:WaitForChild("HumanoidRootPart")
    rigType = humanoid.RigType
    isR15 = rigType == Enum.HumanoidRigType.R15
    isR6 = rigType == Enum.HumanoidRigType.R6
    
    if isR6 then
        StarterGui:SetCore("SendNotification", {
            Title = "Rig Type",
            Text = "You are in R6 - Using Advanced Fly",
            Duration = 3
        })
    elseif isR15 then
        StarterGui:SetCore("SendNotification", {
            Title = "Rig Type",
            Text = "You are in R15 - Using Superman Fly",
            Duration = 3
        })
    end
end

local function disableDefaultAnimate()
    local animate = character:FindFirstChild("Animate")
    if animate then
        animate.Disabled = true
    end
end

local function enableDefaultAnimate()
    local animate = character:FindFirstChild("Animate")
    if animate then
        animate.Disabled = false
    end
end

local function playAnimation(animId, startTime, speed)
    if currentAnimTrack then
        currentAnimTrack:Stop(0.1)
        currentAnimTrack = nil
    end
    disableDefaultAnimate()
    for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
        track:Stop()
    end
    local anim = Instance.new("Animation")
    anim.AnimationId = "rbxassetid://" .. tostring(animId)
    currentAnimTrack = humanoid:LoadAnimation(anim)
    currentAnimTrack:Play()
    currentAnimTrack.TimePosition = startTime
    currentAnimTrack:AdjustSpeed(speed)
end

local function stopAnimation()
    if currentAnimTrack then
        currentAnimTrack:Stop(0.1)
        currentAnimTrack = nil
    end
    enableDefaultAnimate()
    for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
        track:Stop()
    end
end

local function createR6Animations()
    local function newAnim(id)
        local anim = Instance.new("Animation")
        anim.AnimationId = "rbxassetid://" .. id
        return anim
    end
    
    animations = {
        forward = newAnim(90872539),
        up = newAnim(90872539),
        right1 = newAnim(136801964),
        right2 = newAnim(142495255),
        left1 = newAnim(136801964),
        left2 = newAnim(142495255),
        flyLow1 = newAnim(97169019),
        flyLow2 = newAnim(282574440),
        flyFast = newAnim(282574440),
        back1 = newAnim(136801964),
        back2 = newAnim(106772613),
        back3 = newAnim(42070810),
        back4 = newAnim(214744412),
        down = newAnim(233322916),
        idle1 = newAnim(97171309)
    }
    
    tracks = {}
    for name, anim in pairs(animations) do
        tracks[name] = humanoid:LoadAnimation(anim)
    end
end

local function setupR6Fly()
    bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(1e5, 1e5, 1e5)
    
    bodyGyro = Instance.new("BodyGyro")
    bodyGyro.MaxTorque = Vector3.new(1e5, 1e5, 1e5)
end

local function setupR15Superman()
    Workspace.Gravity = 0
    humanoid.PlatformStand = true
    playAnimation(10714347256, 4, 0)
    
    local gyro = Instance.new("BodyGyro")
    gyro.Name = "FlyGyro"
    gyro.Parent = HRP
    gyro.P = 90000
    gyro.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
    gyro.CFrame = HRP.CFrame
    
    local bv = Instance.new("BodyVelocity")
    bv.Name = "FlyVelocity"
    bv.Parent = HRP
    bv.MaxForce = Vector3.new(9e9, 9e9, 9e9)
    bv.Velocity = Vector3.new(0, 0.1, 0)
    
    currentVelocity = Vector3.new(0, 0, 0)
    
    local Enums = Enum.HumanoidStateType:GetEnumItems()
    table.remove(Enums, table.find(Enums, Enum.HumanoidStateType.None))
    for i,v in pairs(Enums) do
        humanoid:SetStateEnabled(v, false)
    end
    humanoid.AutoRotate = false
    
    if character:FindFirstChild("Animate") then
        character.Animate.Enabled = false
    end
end

local function stopAllR6()
    for _, track in pairs(tracks) do
        if track then track:Stop() end
    end
end

local function startR6Fly()
    flying = true
    setupR6Fly()
    forwardHold = 0
    flySpeed = savedSpeed
    bodyVelocity.Parent = HRP
    bodyGyro.Parent = HRP
    humanoid.PlatformStand = true
end

local function stopR6Fly()
    flying = false
    if bodyVelocity then bodyVelocity.Parent = nil end
    if bodyGyro then bodyGyro.Parent = nil end
    humanoid.PlatformStand = false
    stopAllR6()
    
    for _, conn in ipairs(flightConns) do
        if conn.Connected then conn:Disconnect() end
    end
    flightConns = {}
end

local function startR15Superman()
    supermanEnabled = true
    setupR15Superman()
    forwardHold = 0
    flySpeed = savedSpeed
    
    local flightUpdate = RunService.RenderStepped:Connect(function(deltaTime)
        local cam = Workspace.CurrentCamera
        local gyro = HRP:FindFirstChild("FlyGyro")
        local bv = HRP:FindFirstChild("FlyVelocity")
        
        if not gyro or not bv then return end
        
        local fwd = moveState.forward - moveState.backward
        local side = moveState.right - moveState.left
        
        local inputVec = (cam.CFrame.LookVector * fwd) + (cam.CFrame.RightVector * side)
        
        if fwd ~= 0 then
            inputVec = inputVec + Vector3.new(0, 0.2 * fwd, 0)
        end
        
        local bobbing = math.sin(tick() * bobbingFrequency) * bobbingAmplitude
        local desiredVelocity = Vector3.new(0, 0, 0)
        if inputVec.Magnitude > 0 then
            desiredVelocity = inputVec.Unit * flySpeed
        else
            desiredVelocity = Vector3.new(0, bobbing, 0)
        end
        
        currentVelocity = currentVelocity:Lerp(desiredVelocity, 0.1)
        bv.Velocity = currentVelocity
        
        local desiredCF
        if fwd > 0 then
            desiredCF = cam.CFrame * CFrame.Angles(math.rad(-90), 0, math.rad(currentRoll))
        else
            desiredCF = cam.CFrame * CFrame.Angles(math.rad(-45 * fwd), 0, math.rad(currentRoll))
        end
        if currentCF then
            currentCF = currentCF:Lerp(desiredCF, lerpCoef)
        else
            currentCF = desiredCF
        end
        gyro.CFrame = currentCF
    end)
    table.insert(flightConns, flightUpdate)
    
    local function onFlyInputBegan(input, gameProc)
        if gameProc then return end
        if input.UserInputType == Enum.UserInputType.Keyboard then
            local key = input.KeyCode
            if key == Enum.KeyCode.W then
                moveState.forward = 1
                playAnimation(10714177846, 4.65, 0)
            elseif key == Enum.KeyCode.S then
                moveState.backward = 1
                playAnimation(10714347256, 4, 0)
            elseif key == Enum.KeyCode.A then
                moveState.left = 1
                if moveState.forward > 0 then
                    playAnimation(10714177846, 4.65, 0)
                end
            elseif key == Enum.KeyCode.D then
                moveState.right = 1
                if moveState.forward > 0 then
                    playAnimation(10714177846, 4.65, 0)
                end
            end
        end
    end
    local flyBegan = UserInputService.InputBegan:Connect(onFlyInputBegan)
    table.insert(flightConns, flyBegan)
    
    local function onFlyInputEnded(input, gameProc)
        if input.UserInputType == Enum.UserInputType.Keyboard then
            local key = input.KeyCode
            if key == Enum.KeyCode.W then
                moveState.forward = 0
                playAnimation(10714347256, 4, 0)
            elseif key == Enum.KeyCode.S then
                moveState.backward = 0
                playAnimation(10714347256, 4, 0)
            elseif key == Enum.KeyCode.A then
                moveState.left = 0
                if moveState.forward > 0 then
                    playAnimation(10714177846, 4.65, 0)
                end
            elseif key == Enum.KeyCode.D then
                moveState.right = 0
                if moveState.forward > 0 then
                    playAnimation(10714177846, 4.65, 0)
                end
            end
        end
    end
    local flyEnded = UserInputService.InputEnded:Connect(onFlyInputEnded)
    table.insert(flightConns, flyEnded)
end

local function stopR15Superman()
    supermanEnabled = false
    Workspace.Gravity = originalGravity
    humanoid.PlatformStand = false
    stopAnimation()
    
    if HRP:FindFirstChild("FlyGyro") then HRP.FlyGyro:Destroy() end
    if HRP:FindFirstChild("FlyVelocity") then HRP.FlyVelocity:Destroy() end
    
    for _, conn in ipairs(flightConns) do
        if conn.Connected then conn:Disconnect() end
    end
    flightConns = {}
    moveState = {forward = 0, backward = 0, left = 0, right = 0}
    
    local Enums = Enum.HumanoidStateType:GetEnumItems()
    table.remove(Enums, table.find(Enums, Enum.HumanoidStateType.None))
    for i,v in pairs(Enums) do
        humanoid:SetStateEnabled(v, true)
    end
    humanoid.AutoRotate = true
    HRP.Velocity = Vector3.new(0, 0, 0)
    HRP.RotVelocity = Vector3.new(0, 0, 0)
    if character:FindFirstChild("Animate") then
        character.Animate.Enabled = true
    end
end

local function toggleFly()
    if not character or not character.Parent then
        character = player.Character or player.CharacterAdded:Wait()
        humanoid = character:WaitForChild("Humanoid")
        HRP = character:WaitForChild("HumanoidRootPart")
    end
    
    if isR6 then
        if flying then
            stopR6Fly()
            _G.FlyState = false
        else
            startR6Fly()
            _G.FlyState = true
        end
    elseif isR15 then
        if supermanEnabled then
            stopR15Superman()
            _G.FlyState = false
        else
            startR15Superman()
            _G.FlyState = true
        end
    end
end

_G.ToggleFly = toggleFly
_G.FlyState = false

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if isR6 and flying then
        if input.KeyCode == Enum.KeyCode.W then inputFlags.forward = true end
        if input.KeyCode == Enum.KeyCode.S then inputFlags.back = true end
        if input.KeyCode == Enum.KeyCode.A then inputFlags.left = true end
        if input.KeyCode == Enum.KeyCode.D then inputFlags.right = true end
        if input.KeyCode == Enum.KeyCode.E or input.KeyCode == Enum.KeyCode.Space then inputFlags.up = true end
        if input.KeyCode == Enum.KeyCode.Q or input.KeyCode == Enum.KeyCode.LeftControl then inputFlags.down = true end
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if isR6 and flying then
        if input.KeyCode == Enum.KeyCode.W then inputFlags.forward = false end
        if input.KeyCode == Enum.KeyCode.S then inputFlags.back = false end
        if input.KeyCode == Enum.KeyCode.A then inputFlags.left = false end
        if input.KeyCode == Enum.KeyCode.D then inputFlags.right = false end
        if input.KeyCode == Enum.KeyCode.E or input.KeyCode == Enum.KeyCode.Space then inputFlags.up = false end
        if input.KeyCode == Enum.KeyCode.Q or input.KeyCode == Enum.KeyCode.LeftControl then inputFlags.down = false end
    end
end)

RunService.Heartbeat:Connect(function(dt)
    if isR6 and flying then
        if not inputFlags.forward then forwardHold = 0 end
        local dir = Vector3.zero
        local camCF = Camera.CFrame
        if inputFlags.forward then dir += camCF.LookVector end
        if inputFlags.back then dir -= camCF.LookVector end
        if inputFlags.left then dir -= camCF.RightVector end
        if inputFlags.right then dir += camCF.RightVector end
        if inputFlags.up then dir += Vector3.yAxis end
        if inputFlags.down then dir -= Vector3.yAxis end
        if dir.Magnitude > 0 then dir = dir.Unit end
        bodyVelocity.Velocity = dir * flySpeed
        bodyGyro.CFrame = camCF

        if inputFlags.up then
            if not tracks.up.IsPlaying then stopAllR6(); tracks.up:Play() end
        elseif inputFlags.down then
            if not tracks.down.IsPlaying then stopAllR6(); tracks.down:Play() end
        elseif inputFlags.left then
            if not tracks.left1.IsPlaying then
                stopAllR6()
                tracks.left1:Play(); tracks.left1.TimePosition = 2.0; tracks.left1:AdjustSpeed(0)
                tracks.left2:Play(); tracks.left2.TimePosition = 0.5; tracks.left2:AdjustSpeed(0)
            end
        elseif inputFlags.right then
            if not tracks.right1.IsPlaying then
                stopAllR6()
                tracks.right1:Play(); tracks.right1.TimePosition = 1.1; tracks.right1:AdjustSpeed(0)
                tracks.right2:Play(); tracks.right2.TimePosition = 0.5; tracks.right2:AdjustSpeed(0)
            end
        elseif inputFlags.back then
            if not tracks.back1.IsPlaying then
                stopAllR6()
                tracks.back1:Play(); tracks.back1.TimePosition = 5.3; tracks.back1:AdjustSpeed(0)
                tracks.back2:Play(); tracks.back2:AdjustSpeed(0)
                tracks.back3:Play(); tracks.back3.TimePosition = 0.8; tracks.back3:AdjustSpeed(0)
                tracks.back4:Play(); tracks.back4.TimePosition = 1; tracks.back4:AdjustSpeed(0)
            end
        elseif inputFlags.forward then
            forwardHold += dt
            if forwardHold >= 3 then
                if not tracks.flyFast.IsPlaying then
                    stopAllR6()
                    flySpeed = savedSpeed * 1.3
                    tracks.flyFast:Play(); tracks.flyFast:AdjustSpeed(0.05)
                end
            else
                if not tracks.flyLow1.IsPlaying then
                    stopAllR6()
                    flySpeed = savedSpeed
                    tracks.flyLow1:Play()
                    tracks.flyLow2:Play()
                end
            end
        else
            if not tracks.idle1.IsPlaying then
                stopAllR6()
                tracks.idle1:Play(); tracks.idle1:AdjustSpeed(0)
            end
        end
    end
end)

local function onCharacterAdded()
    detectRig()
    if isR6 then
        createR6Animations()
    end
    
    flying = false
    supermanEnabled = false
    _G.FlyState = false
end

player.CharacterAdded:Connect(onCharacterAdded)
detectRig()
if isR6 then
    createR6Animations()
end
